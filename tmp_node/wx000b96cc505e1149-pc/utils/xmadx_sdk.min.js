var xmad = function xmad(b, c) {
    function d() {
        console.warn("小盟提示V1.3.4：请注意xmadx_conf.js配置文件中新增的h5_path配置");
    }
    function f() {
        function I() {
            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1);
        }
        var J = void 0;
        try {
            if (J = wx.getStorageSync("xmaduuid"), J) return J;
        } catch (K) {}
        J = I() + I() + I() + I() + I() + I() + I() + I();
        try {
            wx.setStorageSync("xmaduuid", J);
        } catch (K) {}
        return J;
    }
    function g(I) {
        var J = I.currentTarget.dataset.id, K = this.data.xmad;
        K.adData[J].hasshow = !1, this.setData({
            xmad: K
        });
    }
    function h(I) {
        var J = I.currentTarget.dataset.id, K = r[J].curl.replace(/cst=/gi, "cst=" + Date.now());
        K = K.split("?")[1];
        var L = r[J].at;
        if (1 === L) {
            var M = k ? o.h5_path || "/pages/xmadH5" : o.h5_path || "/pages/xmadH5/xmadH5", N = r[J].h5link.replace("?", "|").replace("=", "$");
            N && wx.navigateTo({
                url: M + "?xmadH5url=" + N,
                success: function success() {
                    C(K, "v1/api/clk", [ "log", "imp" ], function() {}, "get");
                },
                fail: function fail() {
                    console.warn("小盟提示：跳转H5广告失败，请在xmadx_conf.js中正确配置h5_path字段。");
                }
            });
        }
        2 === L && (!I.currentTarget.dataset.adImgUrl && (I.currentTarget.dataset.adImgUrl = r[J].appimg), 
        wx.previewImage({
            current: I.currentTarget.dataset.adImgUrl,
            urls: [ I.currentTarget.dataset.adImgUrl ],
            success: function success() {
                C(K, "v1/api/clk", [ "log", "imp" ], function() {}, "get");
            }
        })), 3 === L && C(K, "v1/api/clk", [ "log", "imp" ], function() {}, "get"), 1 !== L && 2 !== L && 3 !== L && console.error("SDK错误：跳转类型at为：" + L + "，不是约定的类型。无法进行跳转、点击上报");
    }
    function j(I, J, K) {
        if (I[J]) {
            var L = I[J];
            I[J] = function(M) {
                return L.call.apply(L, [ this ].concat(Array.prototype.slice.call(arguments))), 
                K.call(this, M, I);
            };
        } else I[J] = function(M) {
            K.call(this, M, J);
        };
    }
    try {
        var k = "wepy" === b;
    } catch (I) {}
    try {
        var I = b.prototype.constructor.name;
        if (I) {
            var l, m;
            "App" === c ? l = b : m = b;
        }
    } catch (I) {}
    var o = require("../conf.js"), p = require("./xmadx_MD5.js");
    var q = 0;
    var r = {};
    if (!o.app_key || 32 !== o.app_key.length) {
        console.warn("小盟提示：配置错误，请在xmadx_conf.js中正确配置您的app_key。");
        return {
            xmApp: function xmApp(K) {
                l ? l(K) : App(K);
            },
            xmPage: function xmPage(K) {
                m ? m(K) : Page(K);
            }
        };
    }
    var s = {
        ak: o.app_key.replace(/(^\s*)|(\s*$)/g, ""),
        v: "1.3.4",
        asid: "",
        reqid: "",
        pb: "",
        pm: "",
        sv: "",
        pv: "",
        nt: "",
        ww: 0,
        wh: 0,
        pr: 0,
        long: 0,
        lat: 0,
        wvv: "",
        wv: "",
        lang: "",
        wsr: {},
        pp: "",
        uuid: "",
        user_info: {}
    }, t = 0, u = function u(I) {
        function J() {
            var P = 4 === K.length;
            P && I && (t = 1, I());
        }
        var K = [];
        (function() {
            wx.getSetting({
                success: function success(P) {
                    P.authSetting["scope.userInfo"] ? wx.getUserInfo({
                        withCredentials: !1,
                        success: function success(Q) {
                            s.user_info = Q.userInfo;
                        },
                        complete: function complete() {
                            K.push("ok1"), J();
                        }
                    }) : (K.push("ok1"), J());
                },
                fail: function fail() {
                    K.push("ok1"), J();
                }
            });
        })(), function() {
            wx.getSystemInfo({
                success: function success(P) {
                    s.wv = "undefined" == typeof P.SDKVersion ? "1.0.0" : P.SDKVersion, s.pb = P.brand, 
                    s.pm = P.model, s.pr = P.pixelRatio, s.ww = P.screenWidth, s.wh = P.screenHeight, 
                    s.lang = P.language, s.wvv = P.version, s.sv = P.system, s.pv = P.platform;
                },
                complete: function complete() {
                    K.push("ok2"), J();
                }
            });
        }(), function() {
            wx.getSetting({
                success: function success(P) {
                    P.authSetting["scope.userLocation"] ? wx.getLocation({
                        type: "wgs84",
                        success: function success(Q) {
                            s.long = Q.latitude, s.lat = Q.longitude;
                        },
                        complete: function complete() {
                            K.push("ok3"), J();
                        }
                    }) : (K.push("ok3"), J());
                },
                fail: function fail() {
                    K.push("ok3"), J();
                }
            });
        }(), function() {
            wx.getNetworkType({
                success: function success(P) {
                    s.nt = P.networkType;
                },
                complete: function complete() {
                    K.push("ok4"), J();
                }
            });
        }();
    }, w = function w(I) {
        wx.setStorageSync("xmwsr", I);
        var K = f();
        s.uuid = K, u(), d();
    }, x = function x() {
        var I = this.options.xmadH5url;
        I && (I = I.replace("|", "?").replace("$", "="), this.setData({
            xmadURL: I
        }));
    }, y = function y() {
        s.wsr = wx.getStorageSync("xmwsr"), s.pp = this.route;
        try {
            var K = this.data.xmad.ad;
        } catch (M) {}
        if (K) for (var L in K) {
            A(this, K[L]);
        }
    }, z = function z(I, J) {
        wx.createSelectorQuery().selectAll(I).boundingClientRect(function(K) {
            if (J) return J(0 < K.length);
        }).exec();
    }, A = function A(I, J) {
        return 32 == J.length ? void D(J, [ "engine", "v1/api/ad" ], function(K) {
            if (200 == K.data.code) {
                var L = K.data.data;
                r[J] = L, r[J].hasshow = !0, r[J].id = J, r[J].push = 0, 1 === L.ct && z(".xm_banner", function(N) {
                    return N ? void (H.banner_calc(function() {
                        r[J].style = H.banner_style;
                    }), M()) : (r[J] = "", console.warn("小盟提示：您在js中配置的 " + J + " 为banner广告，而wxml中没有'xm_banner'代码,请检查"));
                }), 2 === L.ct && z(".xm_insert", function(N) {
                    return N ? void (r[J].style = H.screen_style, M()) : (r[J] = "", console.warn("小盟提示：您在js中配置的 " + J + " 为插屏广告，而wxml中没有'xm_insert'代码,请检查"));
                }), 3 === L.ct && z(".xm_fixed", function(N) {
                    return N ? void (r[J].style = H.type3, M()) : (r[J] = "", console.warn("小盟提示：您在js中配置的 " + J + " 为悬浮窗广告，而wxml中没有'xm_fixed'代码,请检查"));
                });
                var M = function M() {
                    var N = I.data.xmad;
                    N.adData = r, k ? I.xmapply(r) : I.setData({
                        xmad: N
                    });
                    var O = L.iurl.replace(/ist=/gi, "ist=" + Date.now());
                    O = O.split("?")[1], B(I, O, J, L.ct);
                };
            } else ;
        }) : console.warn("广告位ID应为长度为32位，请检查您在js中'xmad'的配置--" + J);
    }, B = function B(I, J, K, L) {
        function M() {
            if (1 === L) {
                var N = wx.createIntersectionObserver(this, {
                    thresholds: [ .2 ],
                    selectAll: !0
                });
                return void N.relativeToViewport().observe(".xm_banner", function(O) {
                    var P = I.data.xmad;
                    .2 < O.intersectionRatio && 0 === P.adData[K].push && (P.adData[K].push = 1, I.setData({
                        xmad: P
                    }), C(J, "v1/api/imp", [ "log", "imp" ], function() {}, "get"), N.disconnect());
                });
            }
            C(J, "v1/api/imp", [ "log", "imp" ], function() {}, "get");
        }
        wx.createSelectorQuery().selectAll(".xm_component").boundingClientRect(function(N) {
            for (var O = 0; O < N.length; O++) {
                if (N[O].dataset.id === K) var P = 1;
            }
            M();
            var Q;
        }).exec();
    };
    var C = function C(I, J) {
        var K = K ? "get" : "post", L = "https://log.xmadx.net/", M = {};
        /imp/.test(J) ? M.iurl = I : M.curl = I;
        var N = 0, O = function O() {
            wx.request({
                url: L + J,
                data: M,
                method: K ? "post" : "get",
                success: function success() {},
                fail: function fail() {
                    2 > N && (N++, M.retryTimes = N, setTimeout(function() {
                        O();
                    }, 1e3));
                }
            });
        };
        O();
    };
    var D = function D(I, J, K, L) {
        0 == t ? u(function() {
            E(I, K, J, L);
        }) : E(I, K, J, L);
    }, E = function E(I, J, K, L) {
        var L = L ? "get" : "post";
        var M = "https://" + K[0] + ".xmadx.net/";
        if (s.asid = I, s.uuid = f(), "log" != K[0]) {
            var N = Date.now() + s.ak + s.uuid + s.asid;
            s.reqid = p.hexMD5(N);
        }
        var O = 0, P = function P() {
            wx.request({
                url: M + K[1],
                data: s,
                header: {},
                method: L,
                success: function success(Q) {
                    J(Q);
                },
                fail: function fail() {
                    2 > O && (O++, s.retryTimes = O, setTimeout(function() {
                        P();
                    }, 1e3));
                }
            });
        };
        P();
    }, F = function F(I) {
        j(I, "onLaunch", w), F.prototype.xmad = "xmad", l ? l(I) : App(I);
    }, H = {
        banner_style: {
            wrap: "width: 100%; height: 166rpx; overflow: hidden; position: relative;",
            icon: "width: 92rpx; height: 34rpx; line-height: 34rpx; background: rgba(0, 0, 0, .3); font-size: 20rpx; position: absolute; left: 10rpx; top: 14rpx; color: #fff; text-align: center; border-radius: 16rpx;",
            img: "width: 100%; height: 166rpx;",
            nav: "position:absolute;left:0;right:0;top:0;bottom:0;margin:0;background:none;"
        },
        banner_calc: function banner_calc(I) {
            var J = this;
            wx.getSystemInfo({
                success: function success(K) {
                    var L = K.screenWidth, M = 2 * (166 * L / 582);
                    J.banner_style.wrap = "width: 100%; height:" + M + "rpx; overflow: hidden; position: relative;", 
                    J.banner_style.img = "width: 100%; height:" + M + "rpx;", I(J.banner_style);
                }
            });
        },
        screen_style: {
            wrap: "position: fixed; width: 100%; height: 100%; left: 0; top: 0; background: rgba(0, 0, 0, .3); z-index: 999;",
            content: "position:relative;width: 600rpx; height: 500rpx; overflow: hidden; left: calc(50% - 300rpx); top: calc(50% - 250rpx)",
            img: " width: 100%; height: 500rpx;",
            close: "position: absolute; right: 0; top: 0; padding: 11rpx; width: 46rpx; height: 46rpx;z-index:2",
            nav: "position:absolute;left:0;right:0;top:0;bottom:0;margin:0;background:none;",
            icon: "width: 94rpx; height: 34rpx; line-height: 34rpx; background: rgba(0, 0, 0, .3); font-size: 20rpx; position: absolute; left: 10rpx; bottom: 14rpx; color: #fff; text-align: center; border-radius: 16rpx;"
        },
        type3: {
            wrap: "position: fixed; width: 120rpx; height: 120rpx; right: 60rpx; bottom: 60rpx; z-index: 998;",
            img: " width: 100%; height: 100%;",
            nav: "position:absolute;left:0;right:0;top:0;bottom:0;margin:0;background:none;"
        }
    };
    return {
        xmApp: F,
        xmPage: function xmPage(I) {
            j(I, "onLoad", y), j(I, "onShow", x), j(I, "xmadClose", g), j(I, "appoIntView", h), 
            m ? m(I) : Page(I);
        }
    };
};

exports.xmad = xmad;